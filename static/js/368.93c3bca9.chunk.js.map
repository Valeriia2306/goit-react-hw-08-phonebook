{"version":3,"file":"static/js/368.93c3bca9.chunk.js","mappings":"yOAOaA,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gLAUzBC,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4GAOrBI,GAAeP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+CAK9BO,EAAQV,EAAAA,EAAAA,MAAYW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gGAOpBS,EAASZ,EAAAA,EAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sc,8BC9B7BW,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KAAaG,SAAS,cAAcC,OAC1CC,MAAOL,EAAAA,KACJM,WACAD,MAAM,yBACNF,SAAS,eACTC,OACHG,SAAUP,EAAAA,KACPQ,IAAI,EAAG,yBACPC,IAAI,GAAI,0BACRN,SAAS,kBACTC,SA+CL,I,IAAA,EA5CA,WACE,IAAMM,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACbb,KAAM,GACNG,MAAO,GACPE,SAAU,IAEZS,iBAAkBjB,EAClBkB,SApBe,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BV,GACEW,EAAAA,EAAAA,IAAS,CACPnB,KAAMgB,EAAOhB,KACbG,MAAOa,EAAOb,MACdE,SAAUW,EAAOX,YAGrBa,GACF,EAW6BP,UAEvBS,EAAAA,EAAAA,MAACtC,EAAI,CAAA6B,SAAA,EACHD,EAAAA,EAAAA,KAACjB,EAAK,CAAC4B,QAAQ,OAAMV,SAAC,gBACtBD,EAAAA,EAAAA,KAACvB,EAAK,CAACmC,KAAK,OAAOtB,KAAK,OAAOuB,YAAY,qBAC3Cb,EAAAA,EAAAA,KAACpB,EAAY,CAACU,KAAK,OAAOwB,UAAU,UAEpCd,EAAAA,EAAAA,KAACjB,EAAK,CAAC4B,QAAQ,QAAOV,SAAC,YACvBD,EAAAA,EAAAA,KAACvB,EAAK,CAACmC,KAAK,QAAQtB,KAAK,QAAQuB,YAAY,iBAC7Cb,EAAAA,EAAAA,KAACpB,EAAY,CAACU,KAAK,QAAQwB,UAAU,UAErCd,EAAAA,EAAAA,KAACjB,EAAK,CAAC4B,QAAQ,WAAUV,SAAC,eAC1BD,EAAAA,EAAAA,KAACvB,EAAK,CAACmC,KAAK,WAAWtB,KAAK,WAAWuB,YAAY,oBACnDb,EAAAA,EAAAA,KAACpB,EAAY,CAACU,KAAK,WAAWwB,UAAU,UAExCd,EAAAA,EAAAA,KAACf,EAAM,CAAC2B,KAAK,SAAQX,SAAC,mBAKhC,EC9Dac,EAAU1C,EAAAA,EAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kDAKpBwC,EAAQ3C,EAAAA,EAAAA,GAASM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iCCK9B,MARA,WACE,OACEkC,EAAAA,EAAAA,MAACK,EAAO,CAAAd,SAAA,EACND,EAAAA,EAAAA,KAACgB,EAAK,CAAAf,SAAC,uBACPD,EAAAA,EAAAA,KAACiB,EAAM,MAGb,C","sources":["components/SignUp/SignUp.styled.jsx","components/SignUp/SignUp.jsx","pages/Registration/Register.styled.jsx","pages/Registration/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  ErrorMessage as Message,\n  Field as Input,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  background-color: #ff1744;\n`;\nexport const Field = styled(Input)`\n  height: 30px;\n  border-radius: 5px;\n  border: none;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const ErrorMessage = styled(Message)`\n  color: red;\n  margin-left: auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  background-color: #3f51b5;\n  transition: 250ms;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  :hover {\n    scale: 1.05;\n  }\n  :active {\n    scale: 0.95;\n    background-color: #ff1744;\n  }\n  :disabled {\n    background-color: red;\n    color: black;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, Field, Form, ErrorMessage, Button } from './SignUp.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operations';\n\nconst SubmitSchema = Yup.object().shape({\n  name: Yup.string().required('Enter name').trim(),\n  email: Yup.string()\n    .nullable()\n    .email('Invalid email address')\n    .required('Enter email')\n    .trim(),\n  password: Yup.string()\n    .min(6, 'Minimum 6 characters!')\n    .max(14, 'Maximum 14 characters!')\n    .required('Enter password')\n    .trim(),\n});\n\nfunction SignUp() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SubmitSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label htmlFor=\"name\">User name:</Label>\n          <Field type=\"text\" name=\"name\" placeholder=\"Enter user name\" />\n          <ErrorMessage name=\"name\" component=\"span\"></ErrorMessage>\n\n          <Label htmlFor=\"email\">Email:</Label>\n          <Field type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n          <ErrorMessage name=\"email\" component=\"span\"></ErrorMessage>\n\n          <Label htmlFor=\"password\">Password:</Label>\n          <Field type=\"password\" name=\"password\" placeholder=\"Enter password\" />\n          <ErrorMessage name=\"password\" component=\"span\"></ErrorMessage>\n\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\nexport default SignUp;\n","import styled from '@emotion/styled';\nexport const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n","import SignUp from 'components/SignUp/SignUp';\nimport { Wrapper, Title } from './Register.styled';\n\nfunction Register() {\n  return (\n    <Wrapper>\n      <Title>Registration Form</Title>\n      <SignUp />\n    </Wrapper>\n  );\n}\nexport default Register;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","Input","_templateObject2","ErrorMessage","Message","_templateObject3","Label","_templateObject4","Button","_templateObject5","SubmitSchema","Yup","shape","name","required","trim","email","nullable","password","min","max","dispatch","useDispatch","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","register","_jsxs","htmlFor","type","placeholder","component","Wrapper","Title","SignUp"],"sourceRoot":""}